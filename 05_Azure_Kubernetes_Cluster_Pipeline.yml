# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Kubernetes Cluster
  env:
    PATH: '/usr/local/bin/terraform:$(PATH)'

- task: DownloadSecureFile@1
  name: publickey
  inputs:
    secureFile: 'id_rsa.pub'
- task: TerraformCLI@0
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
    commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(publickey.secureFilePath) '
    backendType: 'azurerm'
    backendServiceArm: 'ARM_Connection'
    ensureBackend: true
    backendAzureRmResourceGroupName: 'Snehal_RG_TF_file'
    backendAzureRmResourceGroupLocation: 'Central US'
    backendAzureRmStorageAccountName: 'storageaccountfortffilepipeline'
    backendAzureRmContainerName: 'tfstatefiles'
    backendAzureRmKey: 'kubernetes-dev.tfstate'
    allowTelemetryCollection: true
  displayName: 'Kubernetes Cluster pipeline'
